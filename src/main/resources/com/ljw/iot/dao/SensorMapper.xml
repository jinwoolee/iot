<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ljw.iot.dao.SensorMapper">
  
  <resultMap id="sensorResultMap" type="sensor">
    <id column="SENSOR_ID" jdbcType="BIGINT" property="sensor_id" />
    <result column="SENSOR_TYPE" jdbcType="VARCHAR" property="sensor_type" />
    <result column="SENSOR_NAME" jdbcType="VARCHAR" property="sensor_name" />
    <result column="DESC" jdbcType="VARCHAR" property="desc" />
    <result column="REG_DT" jdbcType="TIMESTAMP" property="reg_dt" />
  </resultMap>
  
  <resultMap id="sensorMeasureResultMap" type="sensorMeasure">
    <id column="SENSOR_ID" jdbcType="BIGINT" property="sensor.sensor_id" />
    <result column="SENSOR_TYPE" jdbcType="VARCHAR" property="sensor.sensor_type" />
    <result column="SENSOR_NAME" jdbcType="VARCHAR" property="sensor.sensor_name" />
    <result column="EXPLAN" jdbcType="VARCHAR" property="sensor.explan" />
    <collection  property="measureList" ofType="measure">
     <id column="MEASURE_ID" property="measure_id"/>
  	 <result column="MEASURE" property="measure"/>
    </collection>
  </resultMap>
  
  
  <!-- 센서 정보 조회 -->
  <select id="getSensorList" resultMap="sensorResultMap">
    SELECT
 		sensor_id, sensor_type, sensor_name, explan, reg_dt
    FROM SENSOR
  </select>
  
  <!-- 센서 측정치 조회 -->
  <select id="getMesureList" resultType="measure">
   SELECT
		measure_id, sensor_id, measure, reg_dt
   FROM MEASURE
 </select>
 
 <!-- 센서별 측정치 조회 -->
 <select id="getSensorMeasure" parameterType="sensorVo" resultMap="sensorMeasureResultMap">
  	  select a.sensor_id, a.sensor_type, a.sensor_name, a.explan, b.measure_id, b.measure 
		from SENSOR as a, MEASURE as b,
			(select measure_id
			  from MEASURE where sensor_id = #{sensor_id}
			   and reg_dt between STR_TO_DATE(#{st_dtm}, '%Y%m%d%H%i') and STR_TO_DATE(#{ed_dtm}, '%Y%m%d%H%i')
			 order by reg_dt
			 limit (#{page}-1)*#{pageSize}, #{pageSize}) as c
		WHERE a.sensor_id = b.sensor_id and
			a.sensor_id = #{sensor_id} and 
			b.measure_id = c.measure_id
  </select>

<!-- 센서별 월단위 측정 평균조회 -->
<select id="getMonthlyMeasure" parameterType="sensorVo" resultType="measure">
select sensor_id, date_format(reg_dt, '%Y-%m') reg_dt, round(avg(measure)) measure 
 from MEASURE
where sensor_id = #{sensor_id}
  and reg_dt between str_to_date(#{st_dt}, '%Y%m%d') and str_to_date(#{ed_dt}, '%Y%m%d')
group by sensor_id, date_format(reg_dt, '%Y-%m') 
order by sensor_id, date_format(reg_dt, '%Y-%m')
</select>   

<!-- 센서별 일단위 측정 평균조회 -->
<select id="getDailyMeasure" parameterType="sensorVo" resultType="measure">
select sensor_id, date_format(reg_dt, '%Y-%m-%d') reg_dt, round(avg(measure)) measure 
 from MEASURE
where sensor_id = #{sensor_id}
  and reg_dt between str_to_date(#{st_dt}, '%Y%m%d') and str_to_date(#{ed_dt}, '%Y%m%d')
group by sensor_id, date_format(reg_dt, '%Y-%m-%d') 
order by sensor_id, date_format(reg_dt, '%Y-%m-%d') 
</select>    

<!-- 센서별 시간단위 측정 평균조회 -->
<select id="getTimelyMeasure" parameterType="sensorVo" resultType="measure">
select sensor_id, date_format(reg_dt, '%Y-%m-%d %H') reg_dt, round(avg(measure)) measure 
 from MEASURE
where sensor_id = #{sensor_id}
  and reg_dt between str_to_date(#{st_dt}, '%Y%m%d') and str_to_date(#{ed_dt}, '%Y%m%d')
group by sensor_id, date_format(reg_dt, '%Y-%m-%d %H') 
order by sensor_id, date_format(reg_dt, '%Y-%m-%d %H') 
</select> 
 
<!-- 센서별 5분단위 측정 평균조회 -->
<select id="get5MinMeasure" parameterType="sensorVo" resultType="measure">
select sensor_id, concat(date_format(reg_dt, '%Y-%m-%d %H'), lpad(minute(reg_dt)-mod(minute(reg_dt), 5), 2, 0)) reg_dt, round(avg(measure)) measure  
 from MEASURE
where sensor_id = #{sensor_id}
  and reg_dt between str_to_date(#{st_dt}, '%Y%m%d') and str_to_date(#{ed_dt}, '%Y%m%d')
group by sensor_id, concat(date_format(reg_dt, '%Y-%m-%d %H'), lpad(minute(reg_dt)-mod(minute(reg_dt), 5), 2, 0))
order by sensor_id, concat(date_format(reg_dt, '%Y-%m-%d %H'), lpad(minute(reg_dt)-mod(minute(reg_dt), 5), 2, 0))
</select>

<!-- 센서 측정치 입력-->
<insert id="insertMeasure" parameterType="measure">
	INSERT INTO MEASURE (sensor_id, measure, reg_dt)
  		values (#{sensor_id}, #{measure}, now())
</insert>
</mapper>